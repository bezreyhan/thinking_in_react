// Generated by CoffeeScript 1.7.1
(function() {
  var FilterableProductTable, PRODUCTS, ProductCategoryRow, ProductRow, ProductTable, R, SearchBar;

  R = React.DOM;

  ProductCategoryRow = React.createClass({
    render: function() {
      return R.tr(null, R.th({
        colSpan: 2
      }, this.props.category));
    }
  });

  ProductRow = React.createClass({
    render: function() {
      var name;
      if (this.props.product.stocked) {
        name = this.props.product.name;
      } else {
        name = R.span({
          style: {
            color: 'red'
          }
        }, this.props.product.name);
      }
      return R.tr(null, R.td(null, name), R.td(null, this.props.product.price));
    }
  });

  ProductTable = React.createClass({
    render: function() {
      var lastCategory, rows;
      rows = [];
      lastCategory = null;
      this.props.products.forEach((function(_this) {
        return function(product) {
          if (product.name.indexOf(_this.props.filterText) === -1 || (!product.stocked && _this.props.inStockOnly)) {
            return;
          }
          if (product.category !== lastCategory) {
            rows.push(ProductCategoryRow({
              category: product.category,
              key: product.category
            }));
          }
          rows.push(ProductRow({
            product: product,
            key: product.name
          }));
          return lastCategory = product.category;
        };
      })(this));
      return R.table(null, R.thead(null, R.tr(null, R.th(null, 'Name'), R.th(null, 'Price'))), R.tbody(null, rows));
    }
  });

  SearchBar = React.createClass({
    render: function() {
      return R.form(null, R.input({
        type: 'text',
        placeholder: this.props.filterText,
        onChange: this.handleChange,
        ref: 'filterTextInput'
      }), R.p(null, R.input({
        type: 'checkbox',
        value: this.props.inStockOnly,
        onChange: this.handleChange,
        ref: 'inStockOnlyInput'
      }, 'Only show products in stock')));
    },
    handleChange: function() {
      return this.props.onUserInput(this.refs.filterTextInput.getDOMNode().value, this.refs.inStockOnlyInput.getDOMNode().checked);
    }
  });

  FilterableProductTable = React.createClass({
    getInitialState: function() {
      return {
        filterText: '',
        inStockOnly: false
      };
    },
    handleUserInput: function(filterText, inStockOnly) {
      return this.setState({
        filterText: filterText,
        inStockOnly: inStockOnly
      });
    },
    render: function() {
      return R.div(null, SearchBar({
        filterText: this.state.filterText,
        inStockOnly: this.state.inStockOnly,
        onUserInput: this.handleUserInput
      }), ProductTable({
        products: this.props.products,
        filterText: this.state.filterText,
        inStockOnly: this.state.inStockOnly
      }));
    }
  });

  PRODUCTS = [
    {
      category: 'Sporting Goods',
      price: '$49.99',
      stocked: true,
      name: 'Football'
    }, {
      category: 'Sporting Goods',
      price: '$9.99',
      stocked: true,
      name: 'Baseball'
    }, {
      category: 'Sporting Goods',
      price: '$29.99',
      stocked: false,
      name: 'Basketball'
    }, {
      category: 'Electronics',
      price: '$99.99',
      stocked: true,
      name: 'iPod Touch'
    }, {
      category: 'Electronics',
      price: '$399.99',
      stocked: false,
      name: 'iPhone 5'
    }, {
      category: 'Electronics',
      price: '$199.99',
      stocked: true,
      name: 'Nexus 7'
    }
  ];

  React.renderComponent(FilterableProductTable({
    products: PRODUCTS
  }), document.getElementById('content'));

}).call(this);
